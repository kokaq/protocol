// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: proto/shard.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ShardGrain struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShardId       uint64                 `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	Queue         string                 `protobuf:"bytes,2,opt,name=queue,proto3" json:"queue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShardGrain) Reset() {
	*x = ShardGrain{}
	mi := &file_proto_shard_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardGrain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardGrain) ProtoMessage() {}

func (x *ShardGrain) ProtoReflect() protoreflect.Message {
	mi := &file_proto_shard_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardGrain.ProtoReflect.Descriptor instead.
func (*ShardGrain) Descriptor() ([]byte, []int) {
	return file_proto_shard_proto_rawDescGZIP(), []int{0}
}

func (x *ShardGrain) GetShardId() uint64 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *ShardGrain) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

type ShardItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespaces    map[uint32]string      `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Queues        map[uint64]string      `protobuf:"bytes,2,rep,name=queues,proto3" json:"queues,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	LastCheckin   uint64                 `protobuf:"varint,3,opt,name=last_checkin,json=lastCheckin,proto3" json:"last_checkin,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShardItem) Reset() {
	*x = ShardItem{}
	mi := &file_proto_shard_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardItem) ProtoMessage() {}

func (x *ShardItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_shard_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardItem.ProtoReflect.Descriptor instead.
func (*ShardItem) Descriptor() ([]byte, []int) {
	return file_proto_shard_proto_rawDescGZIP(), []int{1}
}

func (x *ShardItem) GetNamespaces() map[uint32]string {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

func (x *ShardItem) GetQueues() map[uint64]string {
	if x != nil {
		return x.Queues
	}
	return nil
}

func (x *ShardItem) GetLastCheckin() uint64 {
	if x != nil {
		return x.LastCheckin
	}
	return 0
}

type RegisterNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GrpcAddress   string                 `protobuf:"bytes,1,opt,name=grpc_address,json=grpcAddress,proto3" json:"grpc_address,omitempty"`
	Shard         []*ShardItem           `protobuf:"bytes,2,rep,name=shard,proto3" json:"shard,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterNodeRequest) Reset() {
	*x = RegisterNodeRequest{}
	mi := &file_proto_shard_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeRequest) ProtoMessage() {}

func (x *RegisterNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_shard_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeRequest.ProtoReflect.Descriptor instead.
func (*RegisterNodeRequest) Descriptor() ([]byte, []int) {
	return file_proto_shard_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterNodeRequest) GetGrpcAddress() string {
	if x != nil {
		return x.GrpcAddress
	}
	return ""
}

func (x *RegisterNodeRequest) GetShard() []*ShardItem {
	if x != nil {
		return x.Shard
	}
	return nil
}

type RegisterNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accepted      bool                   `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	Status        *StatusResponse        `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterNodeResponse) Reset() {
	*x = RegisterNodeResponse{}
	mi := &file_proto_shard_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeResponse) ProtoMessage() {}

func (x *RegisterNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_shard_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeResponse.ProtoReflect.Descriptor instead.
func (*RegisterNodeResponse) Descriptor() ([]byte, []int) {
	return file_proto_shard_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterNodeResponse) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

func (x *RegisterNodeResponse) GetStatus() *StatusResponse {
	if x != nil {
		return x.Status
	}
	return nil
}

type GetShardRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId      uint32                 `protobuf:"varint,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	QueueId          uint32                 `protobuf:"varint,2,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	Namespace        string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Queue            string                 `protobuf:"bytes,4,opt,name=queue,proto3" json:"queue,omitempty"`
	CreateIfNotFound bool                   `protobuf:"varint,5,opt,name=create_if_not_found,json=createIfNotFound,proto3" json:"create_if_not_found,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetShardRequest) Reset() {
	*x = GetShardRequest{}
	mi := &file_proto_shard_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShardRequest) ProtoMessage() {}

func (x *GetShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_shard_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShardRequest.ProtoReflect.Descriptor instead.
func (*GetShardRequest) Descriptor() ([]byte, []int) {
	return file_proto_shard_proto_rawDescGZIP(), []int{4}
}

func (x *GetShardRequest) GetNamespaceId() uint32 {
	if x != nil {
		return x.NamespaceId
	}
	return 0
}

func (x *GetShardRequest) GetQueueId() uint32 {
	if x != nil {
		return x.QueueId
	}
	return 0
}

func (x *GetShardRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetShardRequest) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *GetShardRequest) GetCreateIfNotFound() bool {
	if x != nil {
		return x.CreateIfNotFound
	}
	return false
}

type GetShardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GrpcAddress   string                 `protobuf:"bytes,1,opt,name=grpc_address,json=grpcAddress,proto3" json:"grpc_address,omitempty"`
	Status        *StatusResponse        `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	IsNew         bool                   `protobuf:"varint,3,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`
	NewShardId    uint64                 `protobuf:"varint,4,opt,name=new_shard_id,json=newShardId,proto3" json:"new_shard_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetShardResponse) Reset() {
	*x = GetShardResponse{}
	mi := &file_proto_shard_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShardResponse) ProtoMessage() {}

func (x *GetShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_shard_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShardResponse.ProtoReflect.Descriptor instead.
func (*GetShardResponse) Descriptor() ([]byte, []int) {
	return file_proto_shard_proto_rawDescGZIP(), []int{5}
}

func (x *GetShardResponse) GetGrpcAddress() string {
	if x != nil {
		return x.GrpcAddress
	}
	return ""
}

func (x *GetShardResponse) GetStatus() *StatusResponse {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetShardResponse) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *GetShardResponse) GetNewShardId() uint64 {
	if x != nil {
		return x.NewShardId
	}
	return 0
}

type ListShardsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListShardsRequest) Reset() {
	*x = ListShardsRequest{}
	mi := &file_proto_shard_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListShardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShardsRequest) ProtoMessage() {}

func (x *ListShardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_shard_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShardsRequest.ProtoReflect.Descriptor instead.
func (*ListShardsRequest) Descriptor() ([]byte, []int) {
	return file_proto_shard_proto_rawDescGZIP(), []int{6}
}

type ListShardsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Shards        []*ShardItem           `protobuf:"bytes,1,rep,name=shards,proto3" json:"shards,omitempty"`
	Status        *StatusResponse        `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListShardsResponse) Reset() {
	*x = ListShardsResponse{}
	mi := &file_proto_shard_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListShardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListShardsResponse) ProtoMessage() {}

func (x *ListShardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_shard_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListShardsResponse.ProtoReflect.Descriptor instead.
func (*ListShardsResponse) Descriptor() ([]byte, []int) {
	return file_proto_shard_proto_rawDescGZIP(), []int{7}
}

func (x *ListShardsResponse) GetShards() []*ShardItem {
	if x != nil {
		return x.Shards
	}
	return nil
}

func (x *ListShardsResponse) GetStatus() *StatusResponse {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_proto_shard_proto protoreflect.FileDescriptor

const file_proto_shard_proto_rawDesc = "" +
	"\n" +
	"\x11proto/shard.proto\x12\x05proto\x1a\x12proto/common.proto\"=\n" +
	"\n" +
	"ShardGrain\x12\x19\n" +
	"\bshard_id\x18\x01 \x01(\x04R\ashardId\x12\x14\n" +
	"\x05queue\x18\x02 \x01(\tR\x05queue\"\xa0\x02\n" +
	"\tShardItem\x12@\n" +
	"\n" +
	"namespaces\x18\x01 \x03(\v2 .proto.ShardItem.NamespacesEntryR\n" +
	"namespaces\x124\n" +
	"\x06queues\x18\x02 \x03(\v2\x1c.proto.ShardItem.QueuesEntryR\x06queues\x12!\n" +
	"\flast_checkin\x18\x03 \x01(\x04R\vlastCheckin\x1a=\n" +
	"\x0fNamespacesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a9\n" +
	"\vQueuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"`\n" +
	"\x13RegisterNodeRequest\x12!\n" +
	"\fgrpc_address\x18\x01 \x01(\tR\vgrpcAddress\x12&\n" +
	"\x05shard\x18\x02 \x03(\v2\x10.proto.ShardItemR\x05shard\"a\n" +
	"\x14RegisterNodeResponse\x12\x1a\n" +
	"\baccepted\x18\x01 \x01(\bR\baccepted\x12-\n" +
	"\x06status\x18\x02 \x01(\v2\x15.proto.StatusResponseR\x06status\"\xb2\x01\n" +
	"\x0fGetShardRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\rR\vnamespaceId\x12\x19\n" +
	"\bqueue_id\x18\x02 \x01(\rR\aqueueId\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x14\n" +
	"\x05queue\x18\x04 \x01(\tR\x05queue\x12-\n" +
	"\x13create_if_not_found\x18\x05 \x01(\bR\x10createIfNotFound\"\x9d\x01\n" +
	"\x10GetShardResponse\x12!\n" +
	"\fgrpc_address\x18\x01 \x01(\tR\vgrpcAddress\x12-\n" +
	"\x06status\x18\x02 \x01(\v2\x15.proto.StatusResponseR\x06status\x12\x15\n" +
	"\x06is_new\x18\x03 \x01(\bR\x05isNew\x12 \n" +
	"\fnew_shard_id\x18\x04 \x01(\x04R\n" +
	"newShardId\"\x13\n" +
	"\x11ListShardsRequest\"m\n" +
	"\x12ListShardsResponse\x12(\n" +
	"\x06shards\x18\x01 \x03(\v2\x10.proto.ShardItemR\x06shards\x12-\n" +
	"\x06status\x18\x02 \x01(\v2\x15.proto.StatusResponseR\x06status2\xa6\x03\n" +
	"\x11KokaqShardManager\x12G\n" +
	"\fRegisterNode\x12\x1a.proto.RegisterNodeRequest\x1a\x1b.proto.RegisterNodeResponse\x12I\n" +
	"\x0eUnregisterNode\x12\x1a.proto.RegisterNodeRequest\x1a\x1b.proto.RegisterNodeResponse\x12?\n" +
	"\fRequestShard\x12\x16.proto.GetShardRequest\x1a\x17.proto.GetShardResponse\x12;\n" +
	"\bGetShard\x12\x16.proto.GetShardRequest\x1a\x17.proto.GetShardResponse\x12<\n" +
	"\vDeleteShard\x12\x16.proto.GetShardRequest\x1a\x15.proto.StatusResponse\x12A\n" +
	"\n" +
	"ListShards\x12\x18.proto.ListShardsRequest\x1a\x19.proto.ListShardsResponseB!Z\x1fgithub.com/kokaq/protocol/protob\x06proto3"

var (
	file_proto_shard_proto_rawDescOnce sync.Once
	file_proto_shard_proto_rawDescData []byte
)

func file_proto_shard_proto_rawDescGZIP() []byte {
	file_proto_shard_proto_rawDescOnce.Do(func() {
		file_proto_shard_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_shard_proto_rawDesc), len(file_proto_shard_proto_rawDesc)))
	})
	return file_proto_shard_proto_rawDescData
}

var file_proto_shard_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_shard_proto_goTypes = []any{
	(*ShardGrain)(nil),           // 0: proto.ShardGrain
	(*ShardItem)(nil),            // 1: proto.ShardItem
	(*RegisterNodeRequest)(nil),  // 2: proto.RegisterNodeRequest
	(*RegisterNodeResponse)(nil), // 3: proto.RegisterNodeResponse
	(*GetShardRequest)(nil),      // 4: proto.GetShardRequest
	(*GetShardResponse)(nil),     // 5: proto.GetShardResponse
	(*ListShardsRequest)(nil),    // 6: proto.ListShardsRequest
	(*ListShardsResponse)(nil),   // 7: proto.ListShardsResponse
	nil,                          // 8: proto.ShardItem.NamespacesEntry
	nil,                          // 9: proto.ShardItem.QueuesEntry
	(*StatusResponse)(nil),       // 10: proto.StatusResponse
}
var file_proto_shard_proto_depIdxs = []int32{
	8,  // 0: proto.ShardItem.namespaces:type_name -> proto.ShardItem.NamespacesEntry
	9,  // 1: proto.ShardItem.queues:type_name -> proto.ShardItem.QueuesEntry
	1,  // 2: proto.RegisterNodeRequest.shard:type_name -> proto.ShardItem
	10, // 3: proto.RegisterNodeResponse.status:type_name -> proto.StatusResponse
	10, // 4: proto.GetShardResponse.status:type_name -> proto.StatusResponse
	1,  // 5: proto.ListShardsResponse.shards:type_name -> proto.ShardItem
	10, // 6: proto.ListShardsResponse.status:type_name -> proto.StatusResponse
	2,  // 7: proto.KokaqShardManager.RegisterNode:input_type -> proto.RegisterNodeRequest
	2,  // 8: proto.KokaqShardManager.UnregisterNode:input_type -> proto.RegisterNodeRequest
	4,  // 9: proto.KokaqShardManager.RequestShard:input_type -> proto.GetShardRequest
	4,  // 10: proto.KokaqShardManager.GetShard:input_type -> proto.GetShardRequest
	4,  // 11: proto.KokaqShardManager.DeleteShard:input_type -> proto.GetShardRequest
	6,  // 12: proto.KokaqShardManager.ListShards:input_type -> proto.ListShardsRequest
	3,  // 13: proto.KokaqShardManager.RegisterNode:output_type -> proto.RegisterNodeResponse
	3,  // 14: proto.KokaqShardManager.UnregisterNode:output_type -> proto.RegisterNodeResponse
	5,  // 15: proto.KokaqShardManager.RequestShard:output_type -> proto.GetShardResponse
	5,  // 16: proto.KokaqShardManager.GetShard:output_type -> proto.GetShardResponse
	10, // 17: proto.KokaqShardManager.DeleteShard:output_type -> proto.StatusResponse
	7,  // 18: proto.KokaqShardManager.ListShards:output_type -> proto.ListShardsResponse
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_shard_proto_init() }
func file_proto_shard_proto_init() {
	if File_proto_shard_proto != nil {
		return
	}
	file_proto_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_shard_proto_rawDesc), len(file_proto_shard_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_shard_proto_goTypes,
		DependencyIndexes: file_proto_shard_proto_depIdxs,
		MessageInfos:      file_proto_shard_proto_msgTypes,
	}.Build()
	File_proto_shard_proto = out.File
	file_proto_shard_proto_goTypes = nil
	file_proto_shard_proto_depIdxs = nil
}
